document.addEventListener("DOMContentLoaded",(function(){const typeCsvFilePath="csv/doll_type.csv";const powerCsvFilePath="csv/doll_power.csv";const etcItemCsvFilePath="csv/etcitem_data.csv";const iconFolderPath="icon/";let powerMap={};let itemMap={};function loadPowers(){return fetch(powerCsvFilePath).then((response=>response.text())).then((csvText=>{const rows=csvText.trim().split("\n");const headers=rows[0].split(",");rows.slice(1).forEach((row=>{const values=row.split(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/);let power={};headers.forEach(((header,index)=>{power[header.trim().replace(/"/g,"")]=values[index].trim().replace(/"/g,"")}));powerMap[power.id]=power.note}))})).catch((error=>{console.error("Error fetching or parsing doll_power.csv file:",error)}))}function loadItemData(){return fetch(etcItemCsvFilePath).then((response=>response.text())).then((csvText=>{const rows=csvText.trim().split("\n");const headers=rows[0].split(",");rows.slice(1).forEach((row=>{const values=row.split(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/);let item={};headers.forEach(((header,index)=>{item[header.trim().replace(/"/g,"")]=values[index].trim().replace(/"/g,"")}));itemMap[item.item_id]=item.invgfx}))})).catch((error=>{console.error("Error fetching or parsing etcitem_data.csv file:",error)}))}function renderdolls(dolls){const dollGrid=document.querySelector(".doll-grid");dollGrid.innerHTML="";dolls.forEach((doll=>{const card=document.createElement("div");card.className="doll-card";const iconName=itemMap[doll.item_id]||"default";const iconPath=`${iconFolderPath}${iconName}.gif`;const levelMap={0:"0階",1:"1階",2:"2階",3:"3階",4:"4階",5:"5階"};const levelDisplay=levelMap[doll.level]||doll.level;let powersHtml="";if(doll.powers){const powerIds=doll.powers.split(",").map((id=>id.trim()));powersHtml=powerIds.map((id=>`<div>${powerMap[id]||"未知能力"}</div>`)).join("")}card.innerHTML=`\n                <div class="doll-card-content">\n                    <div class="doll-icon">\n                        <img src="${iconPath}" alt="${doll.name}">\n                    </div>\n                    <div class="doll-name">${levelDisplay} ${doll.name}</div>\n                </div>\n                <div class="doll-stats">\n                    ${powersHtml}\n                </div>\n            `;card.dataset.level=doll.level;dollGrid.appendChild(card)}))}function loadDolls(){fetch(typeCsvFilePath).then((response=>response.text())).then((csvText=>{const rows=csvText.trim().split("\n");const headers=rows[0].split(",");const dolls=rows.slice(1).map((row=>{const values=row.split(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/);let doll={};headers.forEach(((header,index)=>{doll[header.trim().replace(/"/g,"")]=values[index].trim().replace(/"/g,"")}));return doll}));renderdolls(dolls)})).catch((error=>{console.error("Error fetching or parsing doll_type.csv file:",error)}))}Promise.all([loadPowers(),loadItemData()]).then(loadDolls);const searchButton=document.querySelector(".search-bar button");const searchInput=document.querySelector(".search-bar input");searchButton.addEventListener("click",(function(){const searchTerm=searchInput.value.toLowerCase();const dollCards=document.querySelectorAll(".doll-card");dollCards.forEach((card=>{const dollName=card.querySelector(".doll-name").textContent.toLowerCase();if(dollName.includes(searchTerm)){card.style.display="block"}else{card.style.display="none"}}))}));const categoryButtons=document.querySelectorAll(".category-btn");categoryButtons.forEach((button=>{button.addEventListener("click",(function(){const level=this.textContent.trim();const dollCards=document.querySelectorAll(".doll-card");dollCards.forEach((card=>{const dollName=card.querySelector(".doll-name").textContent.trim();const dollLevel=dollName.split(" ")[0];if(level==="所有"||dollLevel===level){card.style.display="block"}else{card.style.display="none"}}))}))}))}));